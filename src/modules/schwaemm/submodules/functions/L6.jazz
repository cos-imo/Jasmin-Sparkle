require "branch_permutation.jazz"

inline
fn L6(reg ptr u32[8] SL, reg ptr u32[4] SR)  -> reg ptr u32[8], reg ptr u32[4] {

  reg u32 tx, ty;
  reg u32 shift_tx, shift_ty;
  reg u32 SL_7, SR_1, SR_3, SL_6, SR_0, SR_2;

  /*
    Feistel round
  */

  tx = SL[0];
  tx ^= SL[2];
  tx ^= SL[4];
  ty = SL[1];
  ty ^= SL[3];
  ty ^= SL[5];
  

  shift_tx = tx;
  shift_tx <<= 16;
  tx ^= shift_tx;
  tx <<r= 16;

  shift_ty = ty;
  shift_ty <<= 16;
  ty ^= shift_ty;
  ty <<r= 16;

  SL_7 = SL[7];
  SL_7 ^= SL[1];
  SL_7 ^= tx;
  SL[7] = SL_7;
  SR_1 = SR[1];
  SR_1 ^= SL[3];
  SR_1 ^= tx;
  SR[1] = SR_1;
  SR_3 = SR[3];
  SR_3 ^= SL[5];
  SR_3 ^= tx;
  SR[3] = SR_3;

  SL_6 = SL[6];
  SL_6 ^= SL[0];
  SL_6 ^= ty;
  SL[6] = SL_6;
  SR_0 = SR[0];
  SR_0 ^= SL[2];
  SR_0 ^= ty;
  SR[0] = SR_0;
  SR_2 = SR[2];
  SR_2 ^= SL[4];
  SR_2 ^= ty;
  SR[2] = SR_2;

  /*
    Branch permutation
  */

  SL, SR = branch_permutation(SL, SR);

  return SL,SR;
}
