/*
A simple Alzette implementation in Jasmin
*/

export
fn alzette(reg u32 x, reg u32 y) -> reg u32, reg u32 {

/*
    x,y?
*/ 

reg u32[8] c;

c[0]=0xb7e15162;
c[1]=0xbf715880;
c[2]=0x38b4da56;
c[3]=0x324e7738;
c[4]=0xbb1185eb;
c[5]=0x4f7c7b57;
c[6]=0xcfbfa1c8;
c[7]=0xc2b3293d;

/*
  FIRST BLOCK
*/

 y>>r=31;
 x+=y;
 y>>r=1;

 x>>r=24;
 y^=x;
 x>>r=8;

 x^=c[0];

/*
  SECOND BLOCK
*/

 y>>r=17;
 x+=y;
 y>>r=15;

 x>>r=17;
 y^=x;    
 x>>r=15;

 x^=c[0];

/*
  THIRD BLOCK
*/

 y>>r=0;
 x^=y;

 x>>r=31;
 y^=x;
 y=y;
 x>>r=1;

 x^=c[0];

/*
  FOURTH BLOCK
*/

 y>>r=24;
 x=x+y;
 x=x;
 y>>r=8;

 x>>r=16;
 y^=x;
 x>>r=16;

 x^=c[0];

 return x,y;
 
}
