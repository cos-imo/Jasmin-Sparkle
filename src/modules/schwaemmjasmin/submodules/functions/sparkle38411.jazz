/*
  Sparkle implementation in Jasmin
*/

from utils require "sparkle384_constants.jazz"
from utils require "sparkle_pre_padding.jazz"
from utils require "sparkle_post_padding.jazz"
from functions require "alzette.jazz"
from functions require "L6.jazz"

inline
fn sparkle38411(reg u64 x, reg u64 y)  -> reg u256, reg u128 {

  inline int s;
  inline int i;

  reg u256 SL;
  reg u128 SR;

  for s=0 to 11 {
    
    inline u32 c_constant;
    inline int s_modulo_8;
    inline int s_mod_2_32;

    s_modulo_8 = s%8;
    c_constant = get_sparkle_constant(s_modulo_8);
    s_mod_2_32 = s % (2^32);

    (u32)[y] ^= c_constant; 
    (u32)[y + 4] = s_mod_2_32;

    for i=0 to 5 {
      c_constant = get_sparkle_constant(i);
      (u32)[x + 4*i], (u32)[y + 4*i] = alzette(c_constant, [x + 4*i], [y + 4*i]);
    }
    
    x, y = L6(x,y);

  }

  SL, SR = sparkle_post_padding(x,y);

  return SL, SR;
}

