/*
  Sparkle implementation in Jasmin
*/

from utils require "sparkle384_constants.jazz"
from utils require "sparkle_pre_padding.jazz"
from utils require "sparkle_post_padding.jazz"
from functions require "alzette.jazz"
from functions require "L6.jazz"

inline
fn sparkle3847(reg u256 first_block, reg u128 second_block)  -> reg u256, reg u128 {

  inline int i;
  inline int s;

  inline u32[6] x; 
  inline u32[6] y; 

  x,y = sparkle_pre_padding(first_block, second_block);

  reg u256 SL;
  reg u128 SR;

  for s=0 to 7 {
    
    inline u32 c_constant;
    inline int s_modulo_8;
    inline int s_mod_2_32;

    s_modulo_8 = s%8;
    c_constant = get_sparkle_constant(s_modulo_8);
    s_mod_2_32 = s % (2^32);

    y[0] ^= c_constant;
    y[1] ^= s_mod_2_32;

    for i=0 to 5 {
      x[i], y[i] = alzette(c_constant, x[i], y[i]);
    }
    
    x, y = L6(x,y);

  }

  SL, SR = sparkle_post_padding(x,y);

  return SL, SR;
}

