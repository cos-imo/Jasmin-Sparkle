/*
  Sparkle implementation in Jasmin
*/

from utils require "sparkle384_constants.jazz"
from functions require "alzette.jazz"
from functions require "L6.jazz"

inline
fn sparkle384(stack u32[8] SL, stack u32[4] SR, inline int steps) -> stack u32[8], stack u32[4] {

  inline int s;
  inline int i;

  for s=0 to steps {
    
    inline u32 c_constant;
    inline int s_modulo_8;
    inline int s_mod_2_32;

    s_modulo_8 = s%8;
    c_constant = get_sparkle_constant(s_modulo_8);
    s_mod_2_32 = s % (2^32);

    SL[1] ^= c_constant; 
    SL[3] ^= s_mod_2_32;

    for i=0 to 4 {
      c_constant = get_sparkle_constant(i);
      SL[2*i], SL[2*i+1] = alzette(c_constant, SL[2*i], SL[2*i+1]);
    }

    for i=0 to 2 {
      c_constant = get_sparkle_constant(4+i);
      SR[2*i], SR[2*i+1] = alzette(c_constant, SR[2*i], SR[2*i+1]);
    }

    SL, SR = L6(SL,SR);

  }


  return SL, SR;
}

